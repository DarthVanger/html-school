const alertXuy4ek = `
<h1>Alert Xuy4ek</h1>
`;

export default alertXuy4ek;

// not used, needs refactoring to new format
// of steps and checks for quests like in innerHTML quest
const check = () => {
  const code = getInnerText(editor);
  let step = 0;

  if (!/<script>/.test(code)) {
    showMentorAtCursor('–í–ø–∏—Å—É–π &lt;script&gt;, –±–ª—è—Ç—å)');
  }

  if (/<script>[\n]/.test(code)) {
    showMentorAtCursor('–ö—Ä–∞—Å–∞–≤–∞! –¢–µ–ø–µ—Ä—å –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–π &lt;/script&gt;! :)');
    step++;
  }

  if (/<\/script>/.test(code)) {
    showMentorAtCursor('–û–ì–û–ù–¨! –í–Ω—É—Ç—Ä–∏ —Ç–µ–≥–∞ –ø–∏—à–∏ alert');
    step++;
  }

  if (/<script>\s*alert\s*[^<]*<\/script>/.test(code)) {
    showMentorAtCursor('–°–∫–æ–±–∫—É –∫—Ä—É–≥–ª—É—é –æ—Ç–∫—Ä—ã–≤–∞—é—â—É—é)');
    step++;
  }

  if (/<script>\s*alert[(]\s*[^<]*<\/script>/.test(code)) {
    showMentorAtCursor('–ö–∞–≤—ã—á–∫–∏)');
    step++;
  }

  if (/<script>\s*alert[(]['"][^<]*<\/script>/.test(code)) {
    showMentorAtCursor('—Ö—É–π—á–µ–∫ )');
    step++;
  }

  if (/<script>\s*alert[(]['"][^'"<\s]+[^<]*<\/script>/.test(code)) {
    showMentorAtCursor('–ó–∞–∫—Ä—ã–≤–∞—é—â–∏–µ –∫–∞–≤—ã—á–∫–∏)');
    step++;
  }

  if (/<script>\s*alert[(]['"][^'"]+['"]\s*[^<]*<\/script>/.test(code)) {
    showMentorAtCursor('–ó–∞–∫—Ä—ã—Ç—å –∫—Ä—É–≥–ª—É—é —Å–∫–æ–±–∫—É)');
    step++;
  }

  if (/<script>\s*alert[(]['"][^'"]+['"][)]\s*[^<]*<\/script>/.test(code)) {
    showMentorAtCursor('–¢–æ—á–∫—É —Å –∑–∞–ø—è—Ç–æ–π –±–ª—è—Ç—å!');
    step++;
  }

  if (/<script>\s*alert[(]['"][^'"]+['"][)];\s*<\/script>/.test(code)) {
    showMentorAtCursor(`
      <p>
        –í–∞—â–µ –æ–≥–æ–Ω—å ! üî•üî•üî•
      </p>
      <p>
        –ó–∞–ø—É—Å–∫–∞–π –π–æ–ø—Ç–∞! –î–æ–ª–∂–Ω–æ –ø–∞—Ö–∞—Ç—å)
      </p>
    `);
    step++;
  }

  if (step !== currentStep) {
    nextStep(step);
  }
};
